//
//  NotificationSettingsInteractor.swift
//  ITISService
//
//  Created by Timur Shafigullin on 19/12/2018.
//  Copyright (c) 2018 Timur Shafigullin. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Tempvares so
//  you can apply clean architecture varyour iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol NotificationSettingsBusinessLogic {
    func setupInitialState()
}

protocol NotificationSettingsDataStore {
   
}

class NotificationSettingsInteractor: NotificationSettingsBusinessLogic, NotificationSettingsDataStore {
    
    // MARK: - Instance Properties
    
    var presenter: NotificationSettingsPresentationLogic!
    var worker: NotificationSettingsWorker!
    var profileNetworkManager: ProfileNetworkManager!
    
    // MARK: - Instance Methods
    
    func setupInitialState() {
        guard let user = Managers.userManager.first() else {
            Log.s("User profile not found")
            return
        }
        
        guard var userSettings = user.userSettings else {
            Log.s("User settings not found")
            return
        }
        
        let courseStatus = NotificationSettings.TableView.Model(title: "Статус курса", isOn: userSettings.courseStatusNotificationEnabled, onSwitchValueChanged: { [unowned self] (isOn) in
            userSettings.courseStatusNotificationEnabled = isOn
            self.profileNetworkManager.updateSettings(userSettings: userSettings)
        })
        
        let points = NotificationSettings.TableView.Model(title: "Баллы", isOn: userSettings.pointsNotificationEnabled) { [unowned self] (isOn) in
            userSettings.pointsNotificationEnabled = isOn
            self.profileNetworkManager.updateSettings(userSettings: userSettings)
        }
        
        let mainSection = DefaultTableViewSection(items: [courseStatus, points], headerTitle: "Основные")
        
        let response = NotificationSettings.InitialState.Response(sections: [mainSection])
        
        self.presenter.didInitialStateSetuped(with: response)
    }
    
}
