//
//  SettingsInteractor.swift
//  ITISService
//
//  Created by Timur Shafigullin on 05/12/2018.
//  Copyright (c) 2018 Timur Shafigullin. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SettingsBusinessLogic {
    func prepareInitialState()
    func selectCellRequest(with request: Settings.SelectCell.Request)
    func exitProfile()
}

protocol SettingsDataStore {
    
}

class SettingsInteractor: SettingsBusinessLogic, SettingsDataStore {
    
    // MARK: - Nested Types
    
    fileprivate enum Constants {
        
        // MARK: - Type Properties
        
        static let mainSectionIndex = 0
        
        static let exitRowIndex = 3
    }
    
    // MARK: - Instance Properties
    
    var presenter: SettingsPresentationLogic!
    var worker: SettingsWorker!
    
    // MARK: -
    
    fileprivate var settingNames = ["Аккаунт", "Уведомления", "Опрос"]
    
    // MARK: - Instance Methods
    
    func prepareInitialState() {
        self.presenter.displaySettings(with: Settings.InitialState.Response(settingsNames: self.settingNames))
        
        if let user = Managers.userManager.first() {
            self.presenter.displayUserInfo(with: Settings.UserProfile.Response(user: user))
        }
    }
    
    func selectCellRequest(with request: Settings.SelectCell.Request) {
        let indexPath = request.indexPath
        
        if indexPath.section == Constants.mainSectionIndex {
            if indexPath.row == Constants.exitRowIndex {
                self.presenter.displayConfirmExitActionSheet()
            }
        }
    }
    
    func exitProfile() {
        Managers.userManager.deleteAll()
        KeychainManager.shared.clear()
        
        self.presenter.showLoginScreen()
    }
}
