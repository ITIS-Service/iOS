//
//  QuestionPresenter.swift
//  ITISService
//
//  Created by Тимур Шафигуллин on 27/10/2018.
//  Copyright (c) 2018 Timur Shafigullin. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol QuestionPresentationLogic {
    func showQuestion(with response: Question.Show.Response)
    func showNextQuestionScreen()
    func unselectOtherButton(with response: Question.Buttons.Response)
    func showCoursesScreen() 
}

class QuestionPresenter: QuestionPresentationLogic {
    
    weak var viewController: QuestionDisplayLogic!

    func showQuestion(with response: Question.Show.Response) {
        let answerModels = response.question.answers.enumerated().map {
            Question.AnswersTableView.Model(answerTitle: $1.title, index: $0, delegate: viewController)
        }
        let viewModel = Question.Show.ViewModel(questionTitle: response.question.title, questionNumberTitle: "Вопрос \(response.questionNumber)/\(response.questionNumbers)")
        
        self.viewController.showQuestionTitle(with: viewModel)
        self.viewController.showAnswers(with: answerModels)
    }
    
    func showNextQuestionScreen() {
        self.viewController.showNextQuestionScreen()
    }
    
    func showCoursesScreen() {
        self.viewController.showCoursesScreen()
    }
    
    func unselectOtherButton(with response: Question.Buttons.Response) {
        var unselectIndexPaths = [IndexPath]()
        
        for index in 0 ..< response.buttonsCount {
            if (index != response.selectedButtonIndex) {
                unselectIndexPaths.append(IndexPath(row: index, section: 0))
            }
        }
        
        self.viewController.unselectButtons(with: Question.Buttons.ViewModel(unselectedIndexPaths: unselectIndexPaths))
    }
    
}
