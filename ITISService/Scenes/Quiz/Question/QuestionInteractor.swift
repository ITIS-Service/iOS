//
//  QuestionInteractor.swift
//  ITISService
//
//  Created by Тимур Шафигуллин on 27/10/2018.
//  Copyright (c) 2018 Timur Shafigullin. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol QuestionBusinessLogic {
    func getNextQuestion()
    func writeAnswer(with request: Question.Answer.Request)
    func unselectOtherButtons(with request: Question.Buttons.Request)
    func previousQuestion()
}

protocol QuestionDataStore {
    //var name: String { get set }
}

class QuestionInteractor: QuestionBusinessLogic, QuestionDataStore {
    
    var presenter: QuestionPresentationLogic!
    var worker: QuestionWorker!
    
    func getNextQuestion() {
        if let question = QuizManager.shared.nextQuestion() {
            self.presenter.showQuestion(with: Question.Show.Response(question: question, questionNumber: QuizManager.shared.currentNumber, questionNumbers: QuizManager.shared.questions.count))
        }
    }
    
    func previousQuestion() {
        QuizManager.shared.currentNumber -= 1;
    }

    func writeAnswer(with request: Question.Answer.Request) {
        QuizManager.shared.writeAnswer(at: request.answerIndex)
        if QuizManager.shared.hasNextQuestion() {
            self.presenter.showNextQuestionScreen()
        } else {
            self.presenter.showCoursesScreen()
            print("Quiz Complete! Sending results!")
            print("Buffer results: \(QuizManager.shared.buffer)")
        }
    }
    
    func unselectOtherButtons(with request: Question.Buttons.Request) {
        self.presenter.unselectOtherButton(with: Question.Buttons.Response(selectedButtonIndex: request.selectedButtonIndex, buttonsCount: request.buttonsCount))
    }
    
}
