//
//  QuestionModels.swift
//  ITISService
//
//  Created by Тимур Шафигуллин on 27/10/2018.
//  Copyright (c) 2018 Timur Shafigullin. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum Question {
  // MARK: Use cases
  
    enum Show {
        struct Request {
            
        }
        struct Response {
            let question: QuizQuestion
            let questionNumber: Int
            let questionNumbers: Int
        }
        struct ViewModel {
            let questionTitle: String
            let questionNumberTitle: String
        }
    }
    
    enum Answer {
        struct Request {
            let answerIndex: Int
        }
        struct Response {
            
        }
        struct ViewModel {
            
        }
    }
    
    enum Buttons {
        struct Request {
            let selectedButtonIndex: Int
            let buttonsCount: Int
        }
        struct Response {
            let selectedButtonIndex: Int
            let buttonsCount: Int
        }
        struct ViewModel {
            let unselectedIndexPaths: [IndexPath]
        }
    }
    
    enum AnswersTableView {
        struct Model: TableViewCompatible {
            let answerTitle: String
            let index: Int
            weak var delegate: AnswerTableViewCellDelegate?
            
            var reuseIdentifier: String {
                return AnswerTableViewCell.identifier()
            }
            
            func cell(for tableView: UITableView, at indexPath: IndexPath) -> UITableViewCell {
                let cell = tableView.dequeueReusableCell(withIdentifier: reuseIdentifier, for: indexPath) as! AnswerTableViewCell
                cell.configure(with: self)
                cell.delegate = self.delegate
                return cell
            }
        }
    }
    
}
