//
//  LoginInteractor.swift
//  ITISService
//
//  Created by Тимур Шафигуллин on 19/10/2018.
//  Copyright (c) 2018 Timur Shafigullin. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginBusinessLogic {
    func signIn(with request: Login.SignIn.Request)
}

protocol LoginDataStore {
  //var name: String { get set }
}

class LoginInteractor: LoginBusinessLogic, LoginDataStore {
    
    var presenter: LoginPresentationLogic!
    var worker: LoginWorker!
  
    // MARK: Do something
    
    init() {
        self.worker = LoginWorker()
    }
    
    func signIn(with request: Login.SignIn.Request) {
        guard Validator.validate(studEmail: request.email) else {
            let response = Login.SignIn.Response(success: false, message: Common.Messages.invalidEmail, shouldShowQuiz: false)
            self.presenter.signIn(response: response)
            return
        }
        
        let success = self.worker.signIn(with: request.email, password: request.password)
        let errorMessage = "Пользователь с данным e-mail и паролем не найден"
        self.presenter.signIn(response: Login.SignIn.Response(success: success, message: errorMessage, shouldShowQuiz: true))
    }

}
