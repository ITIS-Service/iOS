//
//  LoginViewController.swift
//  ITISService
//
//  Created by Тимур Шафигуллин on 19/10/2018.
//  Copyright (c) 2018 Timur Shafigullin. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginDisplayLogic: class {
    
}

class LoginViewController: UIViewController, LoginDisplayLogic {
    
    //MARK: - Constants
    
    fileprivate struct Constants {
        static let placeholderColor = UIColor(red: 100 / 255.0, green: 100 / 255.0, blue: 100 / 255.0, alpha: 1)
        static let titleColor = UIColor(red: 153 / 255.0, green: 153 / 255.0, blue: 149 / 255.0, alpha: 1)
    }
    
    //MARK: - Instance Properties
    
    @IBOutlet weak var emailTextField: UITextField!
    @IBOutlet weak var passwordTextField: UITextField!
    
    //MARK: -
    
    var interactor: LoginBusinessLogic?
    var router: (NSObjectProtocol & LoginRoutingLogic & LoginDataPassing)?
    
    //MARK: - Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
  
    //MARK: - Setup

    private func setup() {
        let viewController = self
        let interactor = LoginInteractor()
        let presenter = LoginPresenter()
        let router = LoginRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
  
    // MARK: - Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
          let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
          if let router = router, router.responds(to: selector) {
            router.perform(selector, with: segue)
          }
        }
    }
  
    // MARK: - View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.configureDesign()
    }
    
    //MARK: - Instance Methods
    
    @IBAction func onSignInButtonClick(_ sender: UIButton) {
        
    }
    
    @IBAction func onSignUpButtonClick(_ sender: UIButton) {
        
    }
    
    //MARK: -
    
    private func configureDesign() {
        let attributes: [NSAttributedString.Key: Any] = [
            .foregroundColor: Constants.placeholderColor,
            .font: UIFont(name: "HelveticaNeue-Light", size: 14)!
        ]
        self.emailTextField.attributedPlaceholder = NSAttributedString(string: "Ваша почта КФУ", attributes: attributes)
        self.emailTextField.tintColor = Constants.placeholderColor
        self.passwordTextField.attributedPlaceholder = NSAttributedString(string: "Ваш пароль", attributes: attributes)
        self.passwordTextField.tintColor = Constants.placeholderColor
        
        self.navigationController?.navigationBar.titleTextAttributes = [
            .foregroundColor: Constants.titleColor,
            .font: UIFont(name: "HelveticaNeue-Light", size: 17)!
        ]
        self.navigationController?.navigationBar.setBackgroundImage(UIImage(), for: .default)
        self.navigationController?.navigationBar.shadowImage = UIImage()
        self.navigationController?.navigationBar.isTranslucent = true
        self.navigationController?.view.backgroundColor = .clear
    }
    
}
