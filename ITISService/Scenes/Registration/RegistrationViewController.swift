//
//  RegistrationViewController.swift
//  ITISService
//
//  Created by Тимур Шафигуллин on 22/10/2018.
//  Copyright (c) 2018 Timur Shafigullin. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RegistrationDisplayLogic: class {
    func displaySomething(viewModel: Registration.Something.ViewModel)
}

class RegistrationViewController: UIViewController, RegistrationDisplayLogic {
    
    //MARK: - Constants
    
    fileprivate struct Constants {
        
    }
    
    //MARK: - Instance Properties
    
    @IBOutlet weak var errorView: UIView!
    @IBOutlet weak var errorLabel: UILabel!
    @IBOutlet weak var emailTextField: UITextField!
    @IBOutlet weak var passwordTextField: UITextField!
    @IBOutlet weak var confirmPasswordTextField: UITextField!
    
    //MARK: -
    
    var interactor: RegistrationBusinessLogic?
    var router: (NSObjectProtocol & RegistrationRoutingLogic & RegistrationDataPassing)?
    
    //MARK: - Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    //MARK: - Setup
    
    private func setup() {
        let viewController = self
        let interactor = RegistrationInteractor()
        let presenter = RegistrationPresenter()
        let router = RegistrationRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    //MARK: - Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    //MARK: - View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.configureDesign()
        doSomething()
    }
    
    //MARK: - Instance Methods
    
    //Add otlets methods here
    
    //MARK: -
    
    private func configureDesign() {
        self.navigationController?.transparent()
        self.emailTextField.attributedPlaceholder = NSAttributedString(string: "Ваш e-mail", attributes: Common.Autorization.placeholderAttributes)
        self.passwordTextField.attributedPlaceholder = NSAttributedString(string: "Создать пароль", attributes: Common.Autorization.placeholderAttributes)
        self.confirmPasswordTextField.attributedPlaceholder = NSAttributedString(string: "Повторить пароль", attributes: Common.Autorization.placeholderAttributes)
    }
    
    func doSomething() {
        let request = Registration.Something.Request()
        interactor?.doSomething(request: request)
    }
    
    func displaySomething(viewModel: Registration.Something.ViewModel) {
        //nameTextField.text = viewModel.name
    }
}
